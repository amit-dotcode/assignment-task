{"version":3,"sources":["components/Userdata.js","App.js","reportWebVitals.js","index.js"],"names":["Userdata","useState","user","setUser","page","setPage","loader","SetLoader","useEffect","getUserdata","a","fetch","response","ok","json","resdata","data","console","log","onScrollhandler","document","documentElement","scrollHeight","scrollTop","clientHeight","window","addEventListener","removeEventListener","className","onScroll","map","userData","index","name","trips","airline","flight","country","src","logo","alt","slogan","website","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sQA8HeA,EA1HE,WAEb,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAAsBF,mBAAS,GAA/B,mBAAKG,EAAL,KAAWC,EAAX,KAEA,EAA0BJ,oBAAS,GAAnC,mBAAKK,EAAL,KAAaC,EAAb,KAIAC,qBAAU,WAENC,EAAYL,KAGb,IAOH,IAAMK,EAAW,uCAAG,WAAOL,GAAP,mBAAAM,EAAA,sEACOC,MAAM,qDAAD,OAAsDP,EAAtD,aADZ,cACVQ,EADU,QAGHC,GAHG,SAQMD,EAASE,OARf,OAQVC,EARU,OAUZC,EAVY,OAULD,QAVK,IAULA,OAVK,EAULA,EAASC,KAGhBZ,EAAO,EAEPD,EAAQ,GAAD,mBAAKD,GAAL,YAAcA,MAErBe,QAAQC,IAAIF,GACZb,EAAQa,IAGZT,GAAU,GArBM,4CAAH,sDAmCjB,SAASY,IAEL,MAAkDC,SAASC,gBAAnDC,EAAR,EAAQA,aAAR,EAAsBC,UAAtB,EAAiCC,cACDF,IAE5BjB,EAAQD,EAAO,GACfG,GAAU,GACVE,EAAYL,IASpB,OAzBAI,qBAAU,WAEN,OADAiB,OAAOC,iBAAiB,SAAUP,GAC3B,kBAAMM,OAAOE,oBAAoB,SAAUR,MAGnD,CAACA,IAqBA,qCAEI,6DACA,qBAAKS,UAAU,kBAAkBC,SAAUV,EAA3C,SAEKjB,EAAK4B,KAAI,SAACC,EAAUC,GACjB,OAEI,qBAAKJ,UAAU,YAAf,SACI,sBAAKA,UAAU,eAAf,UACI,8BAAG,6CAAyBG,EAASE,QACrC,8BAAG,6CAAyBF,EAASG,SACrC,uBAEIH,EAASI,QAAQL,KAAI,SAACM,EAAQJ,GAC1B,OAEQ,sBAAKJ,UAAU,iBAAf,UACI,iCAAM,0CAAsBQ,EAAOH,QACnC,iCAAM,8CAA0BG,EAAOC,WACvC,qBAAKC,IAAKF,EAAOG,KAAMC,IAAI,iBAC3B,iCAAM,6CAAyBJ,EAAOK,UACtC,iCAAM,8CAA0BL,EAAOM,aALNV,QARrBA,UA+BpD,mBAAGJ,UAAU,cAAb,UAAuC,IAAXtB,EAAkB,iBAAmB,SCzG9DqC,MAVf,WAGE,OACE,mCACA,cAAC,EAAD,OCIWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASoC,eAAe,SAM1BZ,M","file":"static/js/main.fc3ee309.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n//I done my comment below the code step by step.\r\n\r\nconst Userdata = () => {\r\n\r\n    const [user, setUser] = useState([]); // for user Data state \r\n\r\n    let [page, setPage] = useState(1);  // for page loading state \r\n\r\n    let [loader, SetLoader] = useState(true); // for loader state \r\n\r\n\r\n    // useEffect use to called function use component did mount life cycle Method\r\n    useEffect(() => {\r\n\r\n        getUserdata(page);\r\n\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    // getting Data funtion \r\n    const getUserdata = async (page) => {\r\n        const response = await fetch(`https://api.instantwebtools.net/v1/passenger?page=${page}&size=10`);\r\n\r\n        if (response.ok) {\r\n            // console.log(\"ok hai \");\r\n        } else {\r\n            // console.log(\"bhakk sale okk nai hai \");\r\n        }\r\n        const resdata = await response.json();\r\n\r\n        let data = resdata?.data; // getting data value\r\n\r\n        // checking if page more than 1 store ...prvedata and newdata \r\n        if (page > 1) {\r\n\r\n            setUser([...user, ...user]);\r\n        } else {\r\n            console.log(data);\r\n            setUser(data);\r\n        }\r\n\r\n        SetLoader(false);\r\n\r\n    }\r\n\r\n    //using didmount to fire event onScroll\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', onScrollhandler);\r\n        return () => window.removeEventListener('scroll', onScrollhandler);\r\n\r\n\r\n    }, [onScrollhandler])\r\n\r\n\r\n    // functionality of onScroll Event \r\n    function onScrollhandler() {\r\n\r\n        const { scrollHeight, scrollTop, clientHeight } = document.documentElement;\r\n        if (scrollTop + clientHeight >= scrollHeight) {\r\n\r\n            setPage(page + 1); // update page state value\r\n            SetLoader(true);   // loader value update \r\n            getUserdata(page); // pass argument page value\r\n\r\n            // console.log(\"update\", page);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <h4>-: List of Flight User's :-</h4>\r\n            <div className=\"custome_wrapper\" onScroll={onScrollhandler}>\r\n\r\n                {user.map((userData, index) => {\r\n                    return (\r\n\r\n                        <div className=\"card_data\">\r\n                            <div className=\"user_details\"  key={index}>\r\n                                <p><strong>Name - </strong>{userData.name}</p>\r\n                                <p><strong>Trip - </strong>{userData.trips}</p>\r\n                                <hr />\r\n                                {\r\n                                    userData.airline.map((flight, index) => {\r\n                                        return (\r\n                                            \r\n                                                <div className=\"flight_details\" key={index}>\r\n                                                    <span><strong>Air-</strong>{flight.name}</span>\r\n                                                    <span><strong>country-</strong>{flight.country}</span>\r\n                                                    <img src={flight.logo} alt=\"country_flag\" />\r\n                                                    <span><strong>slogan-</strong>{flight.slogan}</span>\r\n                                                    <span><strong>website-</strong>{flight.website}</span>\r\n\r\n                                                </div>\r\n\r\n                                            \r\n\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    )\r\n                })\r\n\r\n                }\r\n            </div>\r\n            <p className=\"page_Loader\">{loader === true ? \"isLoading.....\" : \"\"}</p>\r\n\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Userdata;\r\n","import './App.css';\nimport Userdata from './components/Userdata';\n\nfunction App() {\n\n  // import Userdata and use and also import css for styling \n  return (\n    <>\n    <Userdata/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}